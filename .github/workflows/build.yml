name: Build Truth AI APK

on:
  push:
    branches: [main, master, development]
  pull_request:
    branches: [main, master]
  workflow_dispatch:
    inputs:
      build-type:
        description: 'Type de build'
        required: true
        default: 'release'
        type: choice
        options:
        - release
        - debug

env:
  FLUTTER_VERSION: '3.22.0'
  JAVA_VERSION: '17'

jobs:
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔍 Detect Flutter Project
      id: detect-project
      run: |
        echo "🔎 Scanning for Flutter project..."
        if [ -f "pubspec.yaml" ]; then
          echo "📁 Project found at root"
          echo "project_dir=." >> $GITHUB_OUTPUT
        elif [ -f "truthsound_app/pubspec.yaml" ]; then
          echo "📁 Project found in truthsound_app"
          echo "project_dir=truthsound_app" >> $GITHUB_OUTPUT
        else
          PROJECT_DIR=$(find . -name 'pubspec.yaml' -type f | head -1 | xargs dirname 2>/dev/null || echo ".")
          echo "📁 Auto-detected project: $PROJECT_DIR"
          echo "project_dir=$PROJECT_DIR" >> $GITHUB_OUTPUT
        fi

    - name: 📊 Debug Info
      run: |
        echo "🏗️ Build Type: ${{ github.event.inputs.build-type || 'release' }}"
        echo "📁 Project Directory: ${{ steps.detect-project.outputs.project_dir }}"
        echo "📦 Project Content:"
        ls -la ${{ steps.detect-project.outputs.project_dir }}

    - name: ⚙️ Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: ${{ env.JAVA_VERSION }}

    - name: 🤖 Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        cmdline-tools-version: "12266719"
        build-tools-version: "34.0.0"
        platform-version: "34"
        platform-tools-version: "34.0.4"
        extra-images: "system-images;android-34;google_apis;x86_64"
        accept-android-sdk-licenses: true

    - name: 📝 Accept Android Licenses
      run: |
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --update

    - name: 🐦 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
        cache-key: flutter-${{ hashFiles('**/pubspec.lock') }}

    - name: 📦 Install Dependencies
      run: flutter pub get --verbose
      working-directory: ${{ steps.detect-project.outputs.project_dir }}

    - name: 🩺 Flutter Doctor
      run: flutter doctor -v

    - name: 🔍 Analyze Code
      run: flutter analyze
      working-directory: ${{ steps.detect-project.outputs.project_dir }}

    - name: 🏗️ Build APK
      id: build-apk
      run: |
        if [ "${{ github.event.inputs.build-type || 'release' }}" = "debug" ]; then
          echo "🔨 Building Debug APK..."
          flutter build apk --debug --verbose
          echo "apk_path=${{ steps.detect-project.outputs.project_dir }}/build/app/outputs/flutter-apk/app-debug.apk" >> $GITHUB_OUTPUT
          echo "build_type=debug" >> $GITHUB_OUTPUT
        else
          echo "🔨 Building Release APK..."
          flutter build apk --release --verbose
          echo "apk_path=${{ steps.detect-project.outputs.project_dir }}/build/app/outputs/flutter-apk/app-release.apk" >> $GITHUB_OUTPUT
          echo "build_type=release" >> $GITHUB_OUTPUT
        fi
      working-directory: ${{ steps.detect-project.outputs.project_dir }}

    - name: 📤 Upload APK Artifact
      uses: actions/upload-artifact@v4
      with:
        name: truth-ai-${{ steps.build-apk.outputs.build_type }}-apk
        path: ${{ steps.build-apk.outputs.apk_path }}
        retention-days: 30

    - name: 📝 Build Summary
      if: always()
      run: |
        echo "## 🏗️ Build Result" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Item | Value |" >> $GITHUB_STEP_SUMMARY
        echo "|------|-------|" >> $GITHUB_STEP_SUMMARY
        echo "| **Status** | ${{ job.status }} |" >> $GITHUB_STEP_SUMMARY
        echo "| **Build Type** | ${{ steps.build-apk.outputs.build_type }} |" >> $GITHUB_STEP_SUMMARY
        echo "| **Project Dir** | ${{ steps.detect-project.outputs.project_dir }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ job.status }}" = "success" ]; then
          echo "### ✅ Build Successful!" >> $GITHUB_STEP_SUMMARY
          echo "APK generated and available in Artifacts" >> $GITHUB_STEP_SUMMARY
        else
          echo "### ❌ Build Failed" >> $GITHUB_STEP_SUMMARY
          echo "Check the logs for details." >> $GITHUB_STEP_SUMMARY
        fi
