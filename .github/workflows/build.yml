name: Truth AI Build - def-pavard

on:
  push:
    branches: [ main, master, development ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: {}  # Permet de déclencher manuellement

env:
  FLUTTER_VERSION: '3.19.0'

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true

    - name: Verify Flutter installation
      run: flutter doctor -v

    - name: Install dependencies
      run: flutter pub get

    - name: List project structure
      run: |
        echo "=== PROJECT STRUCTURE ==="
        ls -la
        echo "=== LIB DIRECTORY ==="
        ls -la lib/ || echo "No lib directory"
        echo "=== TEST DIRECTORY ==="
        ls -la test/ || echo "No test directory"

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true

    - name: Install dependencies
      run: flutter pub get

    - name: Check if tests exist
      run: |
        if [ -d "test" ] && [ "$(find test -name '*_test.dart' | wc -l)" -gt 0 ]; then
          echo "Tests found, running..."
          flutter test --no-pub -v
        else
          echo "No test files found, skipping tests"
          exit 0
        fi

    - name: Analyze code
      run: flutter analyze || echo "Analysis completed with warnings"

  build-android-debug:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true

    - name: Install dependencies
      run: flutter pub get

    - name: Check Android environment
      run: |
        echo "=== FLUTTER DOCTOR ==="
        flutter doctor
        echo "=== ANDROID LICENSES ==="
        flutter doctor --android-licenses || echo "Android licenses check skipped"

    - name: Build Android Debug APK (for troubleshooting)
      run: |
        echo "Building debug APK..."
        flutter build apk --debug --no-tree-shake-icons -v
        echo "=== BUILD OUTPUT STRUCTURE ==="
        find build/ -type f -name "*.apk" || echo "No APK files found"
        ls -la build/app/outputs/ || echo "No outputs directory"

    - name: Upload Debug APK for analysis
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk-troubleshooting
        path: build/
        retention-days: 1

  build-android-release:
    runs-on: ubuntu-latest
    needs: [setup, test]
    # Continue même si les tests échouent (pour debugging)
    if: always()
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true

    - name: Install dependencies
      run: flutter pub get

    - name: Build Android Release APK
      run: |
        echo "Building release APK..."
        flutter build apk --release --split-per-abi --no-tree-shake-icons -v || 
        (echo "APK build failed, trying without split..." && 
         flutter build apk --release --no-split-per-abi --no-tree-shake-icons -v)

    - name: Build Android App Bundle
      run: |
        echo "Building App Bundle..."
        flutter build appbundle --release --no-tree-shake-icons -v || 
        echo "App Bundle build failed"

    - name: List all build outputs
      run: |
        echo "=== ALL BUILD FILES ==="
        find build/ -type f | head -20
        echo "=== APK OUTPUTS ==="
        ls -la build/app/outputs/flutter-apk/ || echo "No APK outputs"
        echo "=== BUNDLE OUTPUTS ==="
        ls -la build/app/outputs/bundle/ || echo "No bundle outputs"

    - name: Upload APK artifacts (if any)
      uses: actions/upload-artifact@v4
      with:
        name: android-apk-files
        path: build/app/outputs/flutter-apk/
        retention-days: 7
      if: success() || failure()

    - name: Upload App Bundle artifacts (if any)
      uses: actions/upload-artifact@v4
      with:
        name: android-bundle-files
        path: build/app/outputs/bundle/
        retention-days: 7
      if: success() || failure()

  status-report:
    runs-on: ubuntu-latest
    needs: [setup, test, build-android-debug, build-android-release]
    if: always()
    steps:
    - name: Generate comprehensive report
      run: |
        echo "=== BUILD DEBUGGING REPORT ==="
        echo "Setup: ${{ needs.setup.result }}"
        echo "Test: ${{ needs.test.result }}"
        echo "Debug Build: ${{ needs.build-android-debug.result }}"
        echo "Release Build: ${{ needs.build-android-release.result }}"
        echo "=============================="
        echo "Report generated at: $(date)" >> build-debug.log
